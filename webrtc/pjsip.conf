; PJSIP Configuration for WebRTC
; Place this file in /etc/asterisk/pjsip.conf

;==============================================================================
; Transport Configuration
;==============================================================================

; WebSocket Secure Transport
[transport-wss]
type=transport
protocol=wss
bind=0.0.0.0:8089
cert_file=/etc/asterisk/keys/fullchain.pem
priv_key_file=/etc/asterisk/keys/privkey.pem
method=tlsv1_2
cipher=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384
verify_client=no
verify_server=no
allow_reload=yes

; Regular UDP Transport (for internal calls)
[transport-udp]
type=transport
protocol=udp
bind=0.0.0.0:5060

;==============================================================================
; WebRTC Client Template
;==============================================================================

[webrtc-template](!)
type=endpoint
transport=transport-wss
context=from-webrtc
disallow=all
allow=opus
allow=ulaw
allow=alaw
; WebRTC required settings
use_avpf=yes
media_encryption=dtls
dtls_verify=fingerprint
dtls_setup=actpass
ice_support=yes
media_use_received_transport=yes
rtcp_mux=yes
; NAT settings
rtp_symmetric=yes
force_rport=yes
rewrite_contact=yes
; Other settings
direct_media=no
trust_id_inbound=yes
send_rpid=yes
send_pai=yes
; Codecs and DTMF
dtmf_mode=rfc4733
language=ja
; Session timers
timers=yes
timers_sess_expires=1800

[webrtc-auth-template](!)
type=auth
auth_type=userpass

[webrtc-aor-template](!)
type=aor
max_contacts=5
remove_existing=yes
qualify_frequency=30

;==============================================================================
; WebRTC Users (1000-1019)
;==============================================================================

; User 1000
[1000](webrtc-aor-template)
type=aor

[1000](webrtc-auth-template)
type=auth
username=1000
password=webrtc_pass_1000

[1000](webrtc-template)
type=endpoint
auth=1000
aors=1000
callerid="WebRTC User 1000" <1000>

; User 1001
[1001](webrtc-aor-template)
type=aor

[1001](webrtc-auth-template)
type=auth
username=1001
password=webrtc_pass_1001

[1001](webrtc-template)
type=endpoint
auth=1001
aors=1001
callerid="WebRTC User 1001" <1001>

; User 1002
[1002](webrtc-aor-template)
type=aor

[1002](webrtc-auth-template)
type=auth
username=1002
password=webrtc_pass_1002

[1002](webrtc-template)
type=endpoint
auth=1002
aors=1002
callerid="WebRTC User 1002" <1002>

; User 1003
[1003](webrtc-aor-template)
type=aor

[1003](webrtc-auth-template)
type=auth
username=1003
password=webrtc_pass_1003

[1003](webrtc-template)
type=endpoint
auth=1003
aors=1003
callerid="WebRTC User 1003" <1003>

; User 1004
[1004](webrtc-aor-template)
type=aor

[1004](webrtc-auth-template)
type=auth
username=1004
password=webrtc_pass_1004

[1004](webrtc-template)
type=endpoint
auth=1004
aors=1004
callerid="WebRTC User 1004" <1004>

; User 1005
[1005](webrtc-aor-template)
type=aor

[1005](webrtc-auth-template)
type=auth
username=1005
password=webrtc_pass_1005

[1005](webrtc-template)
type=endpoint
auth=1005
aors=1005
callerid="WebRTC User 1005" <1005>

; Add more users as needed (1006-1019)...

;==============================================================================
; External SIP Trunk (if needed)
;==============================================================================

; [trunk-outbound]
; type=endpoint
; transport=transport-udp
; context=from-trunk
; disallow=all
; allow=ulaw
; allow=alaw
; outbound_auth=trunk-auth
; aors=trunk-aor
; from_user=your_trunk_username
; from_domain=your_trunk_domain

; [trunk-auth]
; type=auth
; auth_type=userpass
; username=your_trunk_username
; password=your_trunk_password

; [trunk-aor]
; type=aor
; contact=sip:your_trunk_domain

; [trunk-identify]
; type=identify
; endpoint=trunk-outbound
; match=your_trunk_ip